/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DevToken,
  DevTokenInterface,
} from "../../../contracts/devToken.sol/DevToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600b60809081526a29b7b1b4b0b62a37b5b2b760a91b60a0526001906200002c9082620002af565b50604080518082019091526003815262534f4360e81b6020820152600290620000569082620002af565b506003805460ff191660121790553480156200007157600080fd5b50604051620012a5380380620012a583398101604081905262000094916200037b565b6200009f33620000d2565b600354620000cb903390620000b99060ff16600a620004aa565b620000c59084620004bf565b62000122565b50620004ef565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166200017d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060046000828254620001919190620004d9565b90915550506001600160a01b03821660009081526005602052604081208054839290620001c0908490620004d9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023557607f821691505b6020821081036200025657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002aa57600081815260208120601f850160051c81016020861015620002855750805b601f850160051c820191505b81811015620002a65782815560010162000291565b5050505b505050565b81516001600160401b03811115620002cb57620002cb6200020a565b620002e381620002dc845462000220565b846200025c565b602080601f8311600181146200031b5760008415620003025750858301515b600019600386901b1c1916600185901b178555620002a6565b600085815260208120601f198616915b828110156200034c578886015182559484019460019091019084016200032b565b50858210156200036b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200038e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003ec578160001904821115620003d057620003d062000395565b80851615620003de57918102915b93841c9390800290620003b0565b509250929050565b6000826200040557506001620004a4565b816200041457506000620004a4565b81600181146200042d5760028114620004385762000458565b6001915050620004a4565b60ff8411156200044c576200044c62000395565b50506001821b620004a4565b5060208310610133831016604e8410600b84101617156200047d575081810a620004a4565b620004898383620003ab565b8060001904821115620004a057620004a062000395565b0290505b92915050565b6000620004b88383620003f4565b9392505050565b8082028115828204841417620004a457620004a462000395565b80820180821115620004a457620004a462000395565b610da680620004ff6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610219578063a9059cbb1461022c578063dd62ed3e1461023f578063f2fde38b1461027857600080fd5b8063715018a6146101db5780638da5cb5b146101e357806395d89b41146101fe578063a0712d681461020657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018a57806342966c681461019d57806370a08231146101b257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61028b565b60405161011a9190610ab5565b60405180910390f35b610136610131366004610b1f565b610319565b604051901515815260200161011a565b6004545b60405190815260200161011a565b610136610166366004610b49565b610330565b6003546101789060ff1681565b60405160ff909116815260200161011a565b610136610198366004610b1f565b6103e6565b6101b06101ab366004610b85565b61041d565b005b61014a6101c0366004610b9e565b6001600160a01b031660009081526005602052604090205490565b6101b061044e565b6000546040516001600160a01b03909116815260200161011a565b61010d610462565b6101b0610214366004610b85565b61046f565b610136610227366004610b1f565b61049d565b61013661023a366004610b1f565b610538565b61014a61024d366004610bc0565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6101b0610286366004610b9e565b610545565b6001805461029890610bf3565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610bf3565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b60006103263384846105bb565b5060015b92915050565b600061033d8484846106e0565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156103c75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103db85336103d68685610c43565b6105bb565b506001949350505050565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103269185906103d6908690610c56565b610425610847565b60035461044b90339061043c9060ff16600a610d4d565b6104469084610d59565b6108a1565b50565b610456610847565b610460600061098d565b565b6002805461029890610bf3565b610477610847565b60035461044b90339061048e9060ff16600a610d4d565b6104989084610d59565b6109dd565b3360009081526006602090815260408083206001600160a01b03861684529091528120548281101561051f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103be565b61052e33856103d68685610c43565b5060019392505050565b60006103263384846106e0565b61054d610847565b6001600160a01b0381166105b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103be565b61044b8161098d565b6001600160a01b03831661061d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103be565b6001600160a01b03821661067e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103be565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107445760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103be565b6001600160a01b0382166107a65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103be565b6001600160a01b038316600090815260056020526040812080548392906107ce908490610c43565b90915550506001600160a01b038216600090815260056020526040812080548392906107fb908490610c56565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106d391815260200190565b6000546001600160a01b031633146104605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103be565b6001600160a01b0382166109015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103be565b6001600160a01b03821660009081526005602052604081208054839290610929908490610c43565b9250508190555080600460008282546109429190610c43565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610a335760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103be565b8060046000828254610a459190610c56565b90915550506001600160a01b03821660009081526005602052604081208054839290610a72908490610c56565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610981565b600060208083528351808285015260005b81811015610ae257858101830151858201604001528201610ac6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b1a57600080fd5b919050565b60008060408385031215610b3257600080fd5b610b3b83610b03565b946020939093013593505050565b600080600060608486031215610b5e57600080fd5b610b6784610b03565b9250610b7560208501610b03565b9150604084013590509250925092565b600060208284031215610b9757600080fd5b5035919050565b600060208284031215610bb057600080fd5b610bb982610b03565b9392505050565b60008060408385031215610bd357600080fd5b610bdc83610b03565b9150610bea60208401610b03565b90509250929050565b600181811c90821680610c0757607f821691505b602082108103610c2757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032a5761032a610c2d565b8082018082111561032a5761032a610c2d565b600181815b80851115610ca4578160001904821115610c8a57610c8a610c2d565b80851615610c9757918102915b93841c9390800290610c6e565b509250929050565b600082610cbb5750600161032a565b81610cc85750600061032a565b8160018114610cde5760028114610ce857610d04565b600191505061032a565b60ff841115610cf957610cf9610c2d565b50506001821b61032a565b5060208310610133831016604e8410600b8410161715610d27575081810a61032a565b610d318383610c69565b8060001904821115610d4557610d45610c2d565b029392505050565b6000610bb98383610cac565b808202811582820484141761032a5761032a610c2d56fea26469706673582212203e9bede43bd61abddfd60ca270faa48eed168ea1efe914998a77ad28ef035fa364736f6c63430008110033";

type DevTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DevTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DevToken__factory extends ContractFactory {
  constructor(...args: DevTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DevToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<DevToken>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): DevToken {
    return super.attach(address) as DevToken;
  }
  override connect(signer: Signer): DevToken__factory {
    return super.connect(signer) as DevToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DevTokenInterface {
    return new utils.Interface(_abi) as DevTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DevToken {
    return new Contract(address, _abi, signerOrProvider) as DevToken;
  }
}
